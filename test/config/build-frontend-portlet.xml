<?xml version="1.0"?>
<!DOCTYPE project>

<project default="test-frontend">
	<property name="config" value="portlets/agent-portlet/test/client/config"/>
	<property name="code_reports" value="/var/www/code_reports/agent-portlet"/>

	<target name="test-frontend" depends="npm-install">
		<echo>GRUNT - Test Frontend</echo>
		<exec executable="grunt" dir="${basedir}/${config}" osfamily="unix" resultproperty="cmdresult">
			<arg line="testJenkins --no-color"/>
			<redirector output="${config}/grunt.status" alwayslog="true"/>
		</exec>
		<antcall target="client-side-complexity" />
		<antcall target="copy-coverage" />
		<antcall target="cleanup" />
		<antcall target="process" />
	</target>

	<target name="build-frontend" depends="npm-install">
		<echo>GRUNT - Build Frontend</echo>
		<exec executable="grunt" dir="${basedir}/${config}" osfamily="unix" resultproperty="cmdresult">
			<arg line="buildjs --no-color"/>
			<redirector output="${config}/grunt.status" alwayslog="true"/>
		</exec>
		<antcall target="cleanup" />
		<antcall target="process" />
	</target>

	<target name="npm-install">
		<echo>NPM INSTALL</echo>
		<exec executable="npm" osfamily="unix" failonerror="true">
			<arg line="config set color false"/>
		</exec>
		<exec executable="npm" dir="${basedir}/${config}" osfamily="unix" failonerror="true">
			<arg line="install"/>
		</exec>
	</target>

	<target name="client-side-complexity">
		<echo>Create Client Side Complexity Report</echo>
		<exec executable="plato" dir="${basedir}/portlets/agent-portlet/docroot/app" osfamily="unix">
			<arg line="-r -d ${code_reports}/client-side-complexity -t 'CPMI Agent Portal' **/*.js"/>
		</exec>
	</target>

	<target name="copy-coverage">
        <echo>Copy Coverage Report</echo>
		<!-- remove local refrences to my-account-portlet-->
		<replace file="${basedir}/${config}/testrunner.html">
			<replacefilter token="../../../../my-account-portlet/docroot/" value=""/>
		</replace>
		<!-- copy selected node_modules to httpd dir -->
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/node_modules/mocha">
			<fileset dir="${basedir}/${config}/node_modules/mocha"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/node_modules/chai">
			<fileset dir="${basedir}/${config}/node_modules/chai"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/node_modules/sinon-chai">
			<fileset dir="${basedir}/${config}/node_modules/sinon-chai"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/node_modules/sinon">
			<fileset dir="${basedir}/${config}/node_modules/sinon"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/node_modules/angular-mocks">
			<fileset dir="${basedir}/${config}/node_modules/angular-mocks"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/node_modules/blanket">
			<fileset dir="${basedir}/${config}/node_modules/blanket"/>
		</copy>
		<!-- copy libs to httpd dir -->
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/lib/jquery">
			<fileset dir="${basedir}/portlets/my-account-portlet/docroot/lib/jquery"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/lib/datatables">
			<fileset dir="${basedir}/portlets/my-account-portlet/docroot/lib/datatables"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/lib/angular">
			<fileset dir="${basedir}/portlets/my-account-portlet/docroot/lib/angular"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/lib/angular-resource">
			<fileset dir="${basedir}/portlets/my-account-portlet/docroot/lib/angular-resource"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/lib/angular-ui-router">
			<fileset dir="${basedir}/portlets/my-account-portlet/docroot/lib/angular-ui-router"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/lib/angular-touch">
			<fileset dir="${basedir}/portlets/my-account-portlet/docroot/lib/angular-touch"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/lib/moment">
			<fileset dir="${basedir}/portlets/my-account-portlet/docroot/lib/moment"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/lib/toastr">
			<fileset dir="${basedir}/portlets/my-account-portlet/docroot/lib/toastr"/>
		</copy>
		<copy overwrite="true" todir="${code_reports}/client-side-coverage/lib/underscore">
			<fileset dir="${basedir}/portlets/my-account-portlet/docroot/lib/underscore"/>
		</copy>
		<!-- copy tests, code and runner to httpd dir -->
		<copy overwrite="true" file="${basedir}/${config}/target.bundle.js" todir="${code_reports}/client-side-coverage"/>
		<copy overwrite="true" file="${basedir}/${config}/test.bundle.js" todir="${code_reports}/client-side-coverage"/>
		<copy overwrite="true" file="${basedir}/${config}/testrunner.html" todir="${code_reports}/client-side-coverage"/>
	</target>

	<target name="cleanup">
        <echo>CLEANUP</echo>
		<delete file="${config}/target.bundle.js" quiet="true"/>
		<delete file="${config}/test.bundle.js" quiet="true"/>
		<delete file="${config}/npm-debug.log" quiet="true"/>
		<delete dir="${config}/node_modules" includeemptydirs="true" quiet="true"/>
	</target>

	<target name="process">
	    <echo>PROCESS RESULT</echo>
		<loadfile property="grunt.status" srcFile="${config}/grunt.status"/>
		<delete file="${config}/grunt.status" quiet="true"/>
		<condition property="cmdsuccess">
			<equals arg1="${cmdresult}" arg2="0"/>
		</condition>
	    <fail unless="cmdsuccess"/>
	</target>

</project>
